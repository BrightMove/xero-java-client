// Copyright 2014 Connectifier, Inc. All Rights Reserved.

apply plugin: 'eclipse'
apply plugin: 'ivy-publish'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.connectifier.xero'
version = '0.3'

repositories {
  mavenCentral()
}

configurations {
  jibx
}

dependencies {
  compile 'com.google.guava:guava:16.0.1'
  compile 'org.bouncycastle:bcpkix-jdk15on:1.50'
  compile 'org.jibx:jibx-schema:1.2.5'
  compile 'org.scribe:scribe:1.3.5'
  jibx 'org.jibx:jibx-bind:1.2.5'
  testCompile 'junit:junit:4.11'
}

sourceSets {
  main {
    java.srcDirs = [ 'src/main/java', 'src/generated/java' ]
  }
}

compileJava.dependsOn ':source-gen:jibx'

compileJava {
  doLast{
    bindingFilePath = file('src/generated/java/binding.xml').absolutePath

    project.ant {
      taskdef(name: 'jibx',
          classname: 'org.jibx.binding.ant.CompileTask',
          classpath: configurations.jibx.asPath)

      jibx(verbose: true, load: true, binding: bindingFilePath) {
        classpathset(dir: sourceSets.main.output.classesDir)
      }
    }
  }
}

// Publish to local ivy repository with: gradle publishIvyJavaPublicationToIvyRepository
publishing {
  publications {
    ivyJava(IvyPublication) {
      from components.java
    }
  }
  repositories {
    ivy {
      url "${System.properties['user.home']}/.ivy2/local"
      // TODO: replace with "layout 'ivy'" in future gradle release
      // https://github.com/gradle/gradle/pull/268
      layout 'pattern', {
        artifact '[organisation]/[module]/[revision]/[ext]s/[artifact](.[ext])'
        ivy '[organisation]/[module]/[revision]/[artifact]s/[artifact](.[ext])'
      }
    }
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}
 
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories.mavenDeployer {
    beforeDeployment { MavenDeployment deployment -> signPom(deployment) }
    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
      authentication(userName: nexusUsername, password: nexusPassword)
    }
    pom.project {
      name 'Xero API Java client library'
      description 'Xero API Java client library'
      url 'https://github.com/connectifier/xero-java-client'
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'https://github.com/connectifier/xero-java-client/blob/master/LICENSE'
          distribution 'repo'
        }
      }
      scm {
        url 'https://github.com/connectifier/xero-java-client'
        connection 'git@github.com:connectifier/xero-java-client.git'
      }
      developers {
        developer {
          id 'benmccann'
          name 'Benjamin McCann'
          organization 'connectifier.com'
          organizationUrl 'https://www.connectifier.com/'
        }
      }
    }
  }
}

